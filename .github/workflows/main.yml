name: Auto merge PR and create tag
on:
  pull_request_review:
    types:
      - submitted
    branches:
      - master

jobs:
  approved:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - name: get PR title and number
        id: data
        run: |
          echo "This PR was approved"
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
          echo "GIT_TOKEN=${{ secrets.GIT_TOKEN }}" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Merge Pull Request and create tag
        id: pr_merge
        if: success()
        run: |
          echo "Pull request number is : ${{ steps.data.outputs.PR_NUMBER }} "
          response=$(curl -L \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ steps.data.outputs.GIT_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.data.outputs.PR_NUMBER }}/merge \
          -d '{"commit_title":"Expand enum","commit_message":"Add a new value to the merge_method enum","merge_method":"merge"}')
          sha=$(echo $response | grep -o '"sha": "[a-f0-9]\{40\}"' | grep -o '[a-f0-9]\{40\}')
          echo "commit_sha=$sha" >> $GITHUB_OUTPUT

      - name: create tag
        id: tag
        run: |
          TAG_NAME="v$(echo $PR_TITLE | grep -oP '\d+\.\d+\.\d+')"
          curl -X POST -H "Authorization: token ${{ steps.data.outputs.GIT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/git/refs \
          -d '{
          "ref": "refs/tags/$TAG_NAME",
          "sha": "${{ steps.pr_merge.outputs.commit_sha }}"
          }'
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create-release
        if: success()
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GIT_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d '{"tag_name":"${{ steps.tag.outputs.TAG_NAME }}","target_commithash":"${{ steps.pr_merge.outputs.commit_sha }}","name":"test-reease ${{ steps.tag.outputs.TAG_NAME }}","body":"Description of the release","draft":false,"prerelease":false,"generate_release_notes":true}'


